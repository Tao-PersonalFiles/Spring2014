\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}Description}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Conditional}{2}}
\@writefile{toc}{\contentsline {paragraph}{My conditional function is steady state, and here's the brief description.}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}Selection}{2}}
\@writefile{toc}{\contentsline {paragraph}{I choose tournament selection method, which the function will return the winner index.}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3}Mutation}{3}}
\@writefile{toc}{\contentsline {paragraph}{My mutation function will generate a random number (0\nobreakspace  {}size), and track the tree while counting until the counter = random number. Delete that subtree's left and right, then use full method to regenerate the subtree.}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4}Crossover}{3}}
\@writefile{toc}{\contentsline {paragraph}{My crossover function will read individuals: son and dau, which are the copy of parents. Inside the function:}{3}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Results}{4}}
\@writefile{toc}{\contentsline {paragraph}{I tested all the functions seperately. \\The mutation function does generate a new subtree.}{4}}
\@writefile{toc}{\contentsline {paragraph}{The crossover function does swap the subtree of son and dau}{4}}
\@writefile{toc}{\contentsline {paragraph}{The Conditional function and tournament function also works well. }{5}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Conclusion}{5}}
\@writefile{toc}{\contentsline {paragraph}{Every function works well, but I will come to have some questions after break.}{5}}
