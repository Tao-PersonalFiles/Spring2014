1.6 Programming Conventions
The OpenGL functions are contained in two libraries usually called gl and glu or GL and GLU. A very poplular library is the OpenGL utility Toolkit(GLUT). Functions defined in it begin with the letters glut.
Note: OpenGL is NOT object oriented.

  1.6.1 Functions names
	* core library begain with gl, such as glVertex3f()
	* Utility library begin with glu, such as gluOrtho2d().

  1.6.1 Macros
  OpenGL defines macros for many values. The prefixes GL.. and GLU_ define the include file in which the macro is defined.

  1.6.3 Date Types
  OpenGL uses the basic C data types: floats, doubles, ints and chars. To allow an implementation to redefine its basic tyes, the header (include) file gl.h defines the basic types GLint, GLfloat, GLdouble, and GLchar.

  1.6.4 Alternate Functions
  Many functions require multiple arguments. These functions have a v before the argument list. The function glVertex3fv() might be used as: 

	GLfloat point[3];
	glVertex3fx(point);

  General function form:
	
	glVertex{234}{sifd} (TYPE coords, ...);
	glVertex{234}{sifd}v (TYPE *coords, ...);

  dimension {234}
  data type {sifd} short(s), integer(i), float(f), or double(d)

1.7 Coodinate System
  Normal Cartesian system for x- and y- directions.

1.8 Simple OpenGL Program
	(on the web)

	1.8.1 Functions
	glutInit() Initialization
	glutCreateWindow(char *name) Creates window
	glutDisplayFunc() Display function calls display
	glutMainLoop()	Main OpenGL event processing loop

	1.8.2 Objects
	*glBegin( GLenum mode )
		specifies the beginning of an object of type mode. Mode includes GL_POINTS, GL_LINES, and GL_POLYGON
	*glEnd()
		specifies the end of a list of vertices. Don't forget to include it after a list of vertices.